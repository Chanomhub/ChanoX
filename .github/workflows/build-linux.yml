name: Build Linux

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/build-linux.yml'
      - 'src-tauri/**'
      - 'src/**'
      - 'package.json'
      - 'bun.lockb'
      - 'Cargo.toml'
      - 'Cargo.lock'
  workflow_dispatch:
  workflow_call:

permissions:
  contents: read

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64]  # ปิด arm64 ชั่วคราวเนื่องจาก cross-compilation ซับซ้อน
        # arch: [x64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install

      - name: Cache Rust
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-${{ matrix.arch }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-cargo-

      - name: Install Rust Target
        run: |
          if [ "${{ matrix.arch }}" = "arm64" ]; then
            rustup target add aarch64-unknown-linux-gnu
          else
            rustup target add x86_64-unknown-linux-gnu
          fi

      - name: Install Linux Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            pkg-config \
            libgtk-3-dev \
            libglib2.0-dev \
            libgdk-pixbuf2.0-dev \
            libpango1.0-dev \
            libcairo2-dev \
            libatk1.0-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libsoup-3.0-dev \
            libwebkit2gtk-4.1-dev \
            xvfb

      - name: Install ARM64 Cross Compiler
        if: matrix.arch == 'arm64'
        run: |
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu

      - name: Run Tests
        run: |
          bun test || echo "Warning: No Bun tests found"
          cargo test || echo "Warning: No Rust tests found"

      - name: Security Scan
        run: |
          cd src-tauri
          cargo install cargo-audit --force
          cargo audit || echo "Warning: Security scan issues detected"
          cd ..

      - name: Ensure resources exist
        run: |
          mkdir -p src-tauri/downloads src-tauri/binaries
          touch src-tauri/downloads/.gitkeep src-tauri/binaries/.gitkeep

      - name: Build Linux App
        run: xvfb-run -a bun run tauri:build:linux:${{ matrix.arch }}

      - name: Prepare artifacts
        shell: bash
        run: |
          mkdir -p upload_artifacts
          shopt -s globstar || true
          found=0
          # แก้ไข: เพิ่ม rpm ในรายการไฟล์ที่ต้องการค้นหา
          for f in src-tauri/target/**/bundle/**/*.{AppImage,deb,rpm}; do
            if [ -f "$f" ]; then
              found=1
              filename=$(basename "$f")
              newname=$(echo "$filename" | sed -E 's/_[0-9]+\.[0-9]+\.[0-9]+(\.[0-9]+)?_/_/g' | sed 's/__/_/g')
              cp "$f" "upload_artifacts/$newname" || cp -p "$f" "upload_artifacts/$newname"
              echo "✅ Copied: $newname"
            fi
          done
          cd upload_artifacts
          for file in *; do
            if [ -f "$file" ] && [ "$file" != ".no_linux_artifact" ]; then
              shasum -a 256 "$file" > "$file.sha256"
              echo "✅ Generated checksum: $file.sha256"
            fi
          done
          if [ "$found" -eq 0 ]; then
            echo "⚠️ No linux artifacts found. Listing target directories for debugging:"
            ls -R src-tauri/target || true
            touch upload_artifacts/.no_linux_artifact
          fi
          echo "Artifacts prepared:"; ls -lh upload_artifacts || true

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ChanoX-linux-${{ matrix.arch }}
          path: upload_artifacts/*
          retention-days: 7