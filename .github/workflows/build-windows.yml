name: Build Windows

on:
  push:
    branches:
      - main
  workflow_dispatch:
  workflow_call:  # เพิ่มบรรทัดนี้เพื่อให้เรียกใช้จาก workflow อื่นได้

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Cache Rust
        uses: actions/cache@v4
        with:
          path: |
            %USERPROFILE%\\.cargo\\bin\\
            %USERPROFILE%\\.cargo\\registry\\index\\
            src-tauri\\target\\
          key: ${{ runner.os }}-${{ matrix.arch }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-cargo-

      - name: Ensure resources exist (Windows)
        run: |
          if (!(Test-Path "src-tauri/downloads")) { New-Item -ItemType Directory -Path "src-tauri/downloads" }
          if (!(Test-Path "src-tauri/binaries")) { New-Item -ItemType Directory -Path "src-tauri/binaries" }
        shell: pwsh

      - name: Build Windows App
        run: bun run tauri:build:x64

      - name: Prepare artifacts
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path upload_artifacts | Out-Null
          Get-ChildItem -Path src-tauri\target -Recurse -Include *.msi -File -ErrorAction SilentlyContinue | ForEach-Object {
            $filename = $_.Name -replace '_\d+\.\d+\.\d+','_' -replace '__','_'
            Copy-Item -Path $_.FullName -Destination (Join-Path $PWD upload_artifacts\$filename)
            Write-Host "✓ Copied: $filename"
          }

          if ((Get-ChildItem upload_artifacts -File -ErrorAction SilentlyContinue).Count -eq 0) {
            Write-Host '⚠ No windows artifacts found. Listing target folders for debugging:'
            Get-ChildItem src-tauri\target -Recurse | Select-Object -First 50 | Format-Table -AutoSize
            New-Item -ItemType File -Path upload_artifacts\.no_windows_artifact | Out-Null
          }

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ChanoX-windows-${{ matrix.arch }}
          path: upload_artifacts/*
          retention-days: 1