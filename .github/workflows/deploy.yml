name: Build Tauri App

on:
  push:
    tags:
      - "v*"   # รันเมื่อมีการสร้าง tag v1.0.0
  workflow_dispatch:  # กดรันเองได้ด้วย

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x64]
        include:
          - os: macos-latest
            arch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      # ✅ ติดตั้ง dependencies เฉพาะ Linux
      - name: Install Linux Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            pkg-config \
            libgtk-3-dev \
            libglib2.0-dev \
            libgdk-pixbuf2.0-dev \
            libpango1.0-dev \
            libcairo2-dev \
            libatk1.0-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libsoup-3.0-dev  # สำหรับ soup3-sys

      - name: Install dependencies
        run: bun install

      # ✅ สร้าง resource folder ที่ Tauri ต้องการ
      - name: Ensure resources exist (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p src-tauri/downloads
          mkdir -p src-tauri/binaries

      - name: Ensure resources exist (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          if (!(Test-Path "src-tauri/downloads")) { New-Item -ItemType Directory -Path "src-tauri/downloads" }
          if (!(Test-Path "src-tauri/binaries")) { New-Item -ItemType Directory -Path "src-tauri/binaries" }
        shell: pwsh

      # ✅ Build per OS
      - name: Build Linux App
        if: matrix.os == 'ubuntu-latest'
        run: bun run tauri:build:linux:x64

      - name: Build Windows App
        if: matrix.os == 'windows-latest'
        run: bun run tauri:build:x64

      - name: Build macOS ARM App
        if: matrix.os == 'macos-latest' && matrix.arch == 'arm64'
        run: bun run tauri:build:mac:arm64

      - name: Build macOS x64 App
        if: matrix.os == 'macos-latest' && matrix.arch == 'x64'
        run: bun run tauri:build:mac:x64

      # ✅ Upload artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tauri-${{ matrix.os }}-${{ matrix.arch }}
          path: src-tauri/target/**/release/bundle/
